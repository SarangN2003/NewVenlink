name: Deploy to AWS Fargate

on:
  workflow_dispatch:

env:
  AWS_REGION: eu-north-1
  ECS_CLUSTER: VenlinkCluster
  ECS_SERVICE: VenLinkService
  CONTAINER_NAME: venlink-container
  IMAGE_URI: 203918861989.dkr.ecr.eu-north-1.amazonaws.com/venlink-image:latest  # Or use specific tag if needed

jobs:
  deploy:
    name: Deploy Updated Task Definition
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Download current ECS Task Definition
        run: |
          aws ecs describe-task-definition \
            --task-definition ${{ env.ECS_SERVICE }} \
            --query 'taskDefinition' > taskdef.json

      - name: Replace image URI in task definition
        run: |
          jq --arg IMAGE "${{ env.IMAGE_URI }}" \
             --arg NAME "${{ env.CONTAINER_NAME }}" \
             '(.containerDefinitions[] | select(.name == $NAME) | .image) |= $IMAGE' \
             taskdef.json > new-taskdef.json

      - name: Register new task definition
        id: register-task-def
        run: |
          NEW_TASK_DEF_ARN=$(aws ecs register-task-definition \
            --cli-input-json file://new-taskdef.json \
            --query 'taskDefinition.taskDefinitionArn' \
            --output text)
          echo "NEW_TASK_DEF_ARN=$NEW_TASK_DEF_ARN" >> $GITHUB_ENV

      - name: Update ECS service to use new task definition
        run: |
          aws ecs update-service \
            --cluster ${{ env.ECS_CLUSTER }} \
            --service ${{ env.ECS_SERVICE }} \
            --task-definition $NEW_TASK_DEF_ARN \
            --force-new-deployment
